{"ast":null,"code":"import _slicedToArray from \"/Users/jacknoble/Documents/InfinityCare/p565-team1/src/main/resources/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jacknoble/Documents/InfinityCare/p565-team1/src/main/resources/frontend/src/views/Modals/SignupSelect.js\";\nimport React from 'react'; // material-ui components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\"; // @material-ui/icons\n\nimport Close from \"@material-ui/icons/Close\";\nimport LocalHospital from \"@material-ui/icons/LocalHospital\";\nimport People from \"@material-ui/icons/People\";\nimport Note from \"@material-ui/icons/Note\"; // core components\n\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport InfoArea from \"components/InfoArea/InfoArea.js\";\nimport modalStyles from \"assets/jss/material-kit-react/modalStyle.js\";\nimport productStyles from \"assets/jss/material-kit-react/views/landingPageSections/productStyle.js\";\nvar Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"down\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n});\nvar useModalStyles = makeStyles(modalStyles);\nvar useProductStyles = makeStyles(productStyles);\nexport default function SignupSelect() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modal = _React$useState2[0],\n      setModal = _React$useState2[1];\n\n  var modalClasses = useModalStyles();\n  var productClasses = useProductStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    size: \"sm\",\n    simple: true,\n    onClick: function onClick() {\n      return setModal(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Sign up\"), React.createElement(Dialog, {\n    modalClasses: {\n      root: modalClasses.center,\n      paper: modalClasses.modal\n    },\n    open: modal,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: function onClose() {\n      return setModal(false);\n    },\n    \"aria-labelledby\": \"modal-slide-title\",\n    \"aria-describedby\": \"modal-slide-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"classic-modal-slide-title\",\n    disableTypography: true,\n    className: modalClasses.modalHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: modalClasses.modalCloseButton,\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    color: \"inherit\",\n    onClick: function onClick() {\n      return setModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Close, {\n    className: modalClasses.modalClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"h4\", {\n    className: modalClasses.modalTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Step 1\")), React.createElement(DialogContent, {\n    id: \"modal-slide-description\",\n    className: modalClasses.modalBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: productClasses.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: productClasses.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Are you a(n)...\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: '/Signup/Insurance',\n    onclick: \"console.log('The link was clicked.'); return false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(InfoArea, {\n    title: \"Patient\",\n    icon: People,\n    iconColor: \"info\",\n    vertical: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: '/Signup/Insurance',\n    onclick: \"console.log('The link was clicked.'); return false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(InfoArea, {\n    title: \"Doctor\",\n    icon: LocalHospital,\n    iconColor: \"danger\",\n    vertical: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: '/Signup/Insurance',\n    onclick: \"console.log('The link was clicked.'); return false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(InfoArea, {\n    title: \"Insurance Company\",\n    icon: Note,\n    iconColor: \"warning\",\n    vertical: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))))))), React.createElement(DialogActions, {\n    className: modalClasses.modalFooter + \" \" + modalClasses.modalFooterCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      minWidth: \"70%\"\n    },\n    onClick: function onClick() {\n      return setModal(false);\n    },\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Sign Up\"))));\n}","map":{"version":3,"sources":["/Users/jacknoble/Documents/InfinityCare/p565-team1/src/main/resources/frontend/src/views/Modals/SignupSelect.js"],"names":["React","makeStyles","Slide","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","Close","LocalHospital","People","Note","Button","GridContainer","GridItem","InfoArea","modalStyles","productStyles","Transition","forwardRef","props","ref","useModalStyles","useProductStyles","SignupSelect","useState","modal","setModal","modalClasses","productClasses","root","center","paper","modalHeader","modalCloseButton","modalClose","modalTitle","modalBody","section","title","modalFooter","modalFooterCenter","minWidth"],"mappings":"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","sourcesContent":["import React from 'react';\n// material-ui components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\nimport LocalHospital from \"@material-ui/icons/LocalHospital\";\nimport People from \"@material-ui/icons/People\";\nimport Note from \"@material-ui/icons/Note\";\n// core components\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport InfoArea from \"components/InfoArea/InfoArea.js\";\n\nimport modalStyles from \"assets/jss/material-kit-react/modalStyle.js\";\nimport productStyles from \"assets/jss/material-kit-react/views/landingPageSections/productStyle.js\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nconst useModalStyles = makeStyles(modalStyles);\nconst useProductStyles = makeStyles(productStyles);\n\nexport default function SignupSelect() {\n  const [modal, setModal] = React.useState(false);\n  const modalClasses = useModalStyles();\n  const productClasses = useProductStyles();\n\n  return (\n    <div>\n        <Button color=\"primary\" size=\"sm\" simple onClick={() => setModal(true)}>\n          Sign up\n        </Button>\n      <Dialog\n        modalClasses={{\n          root: modalClasses.center,\n          paper: modalClasses.modal\n        }}\n        open={modal}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={() => setModal(false)}\n        aria-labelledby=\"modal-slide-title\"\n        aria-describedby=\"modal-slide-description\"\n      >\n        <DialogTitle\n          id=\"classic-modal-slide-title\"\n          disableTypography\n          className={modalClasses.modalHeader}\n        >\n          <IconButton\n            className={modalClasses.modalCloseButton}\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={() => setModal(false)}\n          >\n            <Close className={modalClasses.modalClose} />\n          </IconButton>\n          <h4 className={modalClasses.modalTitle}>Step 1</h4>\n        </DialogTitle>\n        <DialogContent\n          id=\"modal-slide-description\"\n          className={modalClasses.modalBody}\n        >\n            <div className={productClasses.section}>\n                <GridContainer justify=\"center\">\n                    <GridItem xs={12} sm={12} md={8}>\n                    <h2 className={productClasses.title}>Are you a(n)...</h2>\n                    </GridItem>\n                </GridContainer>\n                <div>\n                    <GridContainer>\n                    <GridItem xs={12} sm={12} md={4}>\n                        <a href={'/Signup/Insurance'} onclick=\"console.log('The link was clicked.'); return false\">\n                        <InfoArea\n                        title=\"Patient\"\n                        icon={People}\n                        iconColor=\"info\"\n                        vertical\n                        />\n                        </a>\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                        <a href={'/Signup/Insurance'} onclick=\"console.log('The link was clicked.'); return false\">\n                        <InfoArea\n                        title=\"Doctor\"\n                        icon={LocalHospital}\n                        iconColor=\"danger\"\n                        vertical\n                        />\n                    </a>\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                    <a href={'/Signup/Insurance'} onclick=\"console.log('The link was clicked.'); return false\">\n                        <InfoArea\n                        title=\"Insurance Company\"\n                        icon={Note}\n                        iconColor=\"warning\"\n                        vertical\n                        />\n                    </a>\n                    </GridItem>\n                    </GridContainer>\n                </div>\n            </div>\n        </DialogContent>\n        <DialogActions\n          className={modalClasses.modalFooter + \" \" + modalClasses.modalFooterCenter}\n        >\n          <Button style={{minWidth: \"70%\"}} onClick={() => setModal(false)} color=\"info\">\n            Sign Up\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}